{"version":3,"sources":["app.js","converters.js","environment.js","main.js","resources/index.js"],"names":["App","title","currentDate","Date","myCurrency","myCurrencyValue","throttle_title","myData","myDataDelay","DateFormatValueConverter","toView","value","format","NumberFormatValueConverter","CurrencyFormatValueConverter","config","gCurrency","currency","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Configuration"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,4BAAb;;AAEA,SAAKC,WAAL,GAAmB,IAAIC,IAAJ,EAAnB;AACA,SAAKC,UAAL,GAAkB,GAAlB;AACA,SAAKC,eAAL,GAAuB,MAAvB;;AAEA,SAAKC,cAAL,GAAsB,UAAtB;AACA,SAAKC,MAAL,GAAc,kBAAd;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCNUC,mCAAAA;;;;;2CACVC,yBAAOC,OAAOC,QAAQ;AACnB,mBAAO,sBAAOD,KAAP,EAAcC,MAAd,CAAqBA,SAASA,MAAT,GAAkB,cAAvC,CAAP;AACF;;;;;QAGSC,qCAAAA;;;;;6CACXH,yBAAOC,OAAOC,QAAQ;AACpB,mBAAO,uBAAQD,KAAR,EAAeC,MAAf,CAAsBA,SAASA,MAAT,GAAkB,EAAxC,CAAP;AACD;;;;;QAIUE,uCAAAA,uCADZ;AAEG,8CAAYC,MAAZ,EAAoB;AAAA;;AAChB,iBAAKC,SAAL,GAAiBD,OAAOC,SAAxB;AACH;;+CACDN,yBAAOC,OAAOC,QAAyD;AAAA,gBAAjDK,QAAiD,uEAAtCA,WAAWA,QAAX,GAAsB,KAAKD,SAAW;;AACnE,mBAAOC,WAAW,uBAAQN,KAAR,EAAeC,MAAf,CAAsBA,MAAtB,CAAlB;AACH;;;;;;;;;;;oBC1BU;AACbM,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;UCUCC,YAAAA;;;;;;;;;;;;;;;;AAPhBC,UAAQN,MAAR,CAAe;AACbO,qBAAiB,sBAAYJ,KADhB;AAEbK,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;MAEYC,wBAAAA,gBACX,yBAAa;AAAA;;AACT,SAAKlB,SAAL,GAAiB,GAAjB;AACH;;;;;;;;UC7BaI,YAAAA;AAAT,WAASA,SAAT,CAAmBL,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {Configuration} from './main'; \n\nexport class App {\n  constructor() {\n    this.title = 'Aurelia - Binding Behavior';\n\n    this.currentDate = new Date();\n    this.myCurrency = '£';\n    this.myCurrencyValue = 999.99;//Math.random() * 1000\n\n    this.throttle_title = 'Throttle';\n    this.myData = 'Enter some text!';\n    this.myDataDelay = 2000;\n  }\n}\n","import moment from 'moment';\r\nimport numeral from 'numeral';\r\n//import currencyFormat from 'currency-format';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Configuration} from './main'; \r\n\r\n\r\nexport class DateFormatValueConverter {\r\n   toView(value, format) {\r\n      return moment(value).format(format ? format : 'MMMM Mo YYYY');\r\n   }\r\n}\r\n\r\nexport class NumberFormatValueConverter {\r\n  toView(value, format) {\r\n    return numeral(value).format(format ? format : '');\r\n  }\r\n}\r\n\r\n@inject(Configuration)\r\nexport class CurrencyFormatValueConverter {\r\n    constructor(config) {\r\n        this.gCurrency = config.gCurrency;\r\n    }\r\n    toView(value, format, currency = currency ? currency : this.gCurrency) {\r\n        return currency + numeral(value).format(format);\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n\nexport class Configuration {  \n  constructor(){\n      this.gCurrency = '£';\n  }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}