{"version":3,"sources":["app.js","environment.js","globals.js","main.js","format/format-currency.js","format/format-date.js","format/format-number.js","resources/index.js","format/format-cust.js"],"names":["App","config","title","currentDate","Date","myCurrencyValue","throttle_title","throttle_inp","debounce_title","debounce_inp","myDataDelay","gDelay","myDataDelay2","gDelay2","message","debug","testing","Configuration","gCurrency","gDateFormat","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CurrencyFormatValueConverter","toView","value","format","currency","DateFormatValueConverter","NumberFormatValueConverter","ConvertTicksValueConverter","htmlEncode","html","document","createElement","appendChild","createTextNode","parentNode","innerHTML","PreserveBreaksCustomAttribute","Element","element","valueChanged","replace"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {Configuration} from './globals'; \n\n@inject(Configuration)\nexport class App {\n  constructor(config) {        \n    this.title = 'Aurelia - Binding Behavior';\n\n    this.currentDate = new Date();\n\n    this.myCurrencyValue = 999.99;//Math.random() * 1000\n\n    this.throttle_title = 'throttle';\n    this.throttle_inp = 'Test Throttle';\n\n    this.debounce_title = 'debounce';   \n    this.debounce_inp = 'Test Debounce';\n\n    // global variables\n    this.myDataDelay = config.gDelay;\n    this.myDataDelay2 = config.gDelay2;\n\n    this.message = `this is my text\nit has some line breaks\nand some <script>evil javascript</script>\nthe line breaks were replaced with <br/> tags`;\n\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","\r\nexport class Configuration {  \r\n  constructor(){\r\n      this.gDelay = 2000;\r\n      this.gDelay2 = 2500;\r\n      this.gCurrency = 'Â£';\r\n      this.gDateFormat = 'MMMM Mo YYYY';\r\n  }\r\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}","import numeral from 'numeral';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Configuration} from '../globals'; \r\n\r\n@inject(Configuration)\r\nexport class CurrencyFormatValueConverter {\r\n    constructor(config) {\r\n        this.gCurrency = config.gCurrency;\r\n    }\r\n    toView(value, format, currency = currency ? currency : this.gCurrency) {\r\n        return currency + numeral(value).format(format);\r\n    }\r\n}","import moment from 'moment';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Configuration} from '../globals'; \r\n\r\n@inject(Configuration)\r\nexport class DateFormatValueConverter {\r\n    constructor(config) {\r\n        this.gDateFormat = config.gDateFormat;\r\n    }\r\n   toView(value, format) {\r\n      return moment(value).format(format ? format : this.gDateFormat);\r\n   }\r\n}","import numeral from 'numeral';\r\n\r\nexport class NumberFormatValueConverter {\r\n  toView(value, format) {\r\n    return numeral(value).format(format ? format : '');\r\n  }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import numeral from 'numeral';\r\nimport {inject} from 'aurelia-framework';\r\n\r\nexport class ConvertTicksValueConverter {\r\n  toView(value) {\r\n    return numeral(value / 1000).format('0[.][0]');//2500 becomes 2.5, 2000 becomes 2\r\n  }\r\n}\r\n\r\nfunction htmlEncode(html) {\r\n  return document.createElement('a').appendChild( \r\n    document.createTextNode(html)).parentNode.innerHTML;\r\n}\r\n\r\n@inject(Element)\r\nexport class PreserveBreaksCustomAttribute {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  valueChanged() {\r\n    let html = htmlEncode(this.value);\r\n    html = html.replace(/\\r/g, '').replace(/\\n/g, '<br/>');\r\n    this.element.innerHTML = html;\r\n  }\r\n}"],"sourceRoot":"../src"}